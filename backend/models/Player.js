const mongoose = require('mongoose');

const playerSchema = new mongoose.Schema({
  // Assuming 'id' is a UUID generated by the application or auth system
  // Mongoose automatically adds an '_id' field, but we can use 'id' if needed for specific logic
  // If you want to use a specific 'id' field, uncomment the line below:
  // id: { type: String, required: true, unique: true }, 
  
  // Reference to the user in the authentication system (e.g., from Passport)
  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true, unique: true },
  
  name: { type: String, required: true },
  avatar_url: { type: String } // URL to the player's avatar image
  // Add other player-specific fields if needed
});

// It's often useful to have a virtual for the full name or other derived properties
// playerSchema.virtual('fullName').get(function() {
//   return `${this.firstName} ${this.lastName}`;
// });

// Ensure virtual fields are serialized
// playerSchema.set('toJSON', { virtuals: true });

module.exports = mongoose.model('Player', playerSchema);